#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Final_Linq
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Futbol")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertLiga(Liga instance);
    partial void UpdateLiga(Liga instance);
    partial void DeleteLiga(Liga instance);
    partial void InsertEquipos(Equipos instance);
    partial void UpdateEquipos(Equipos instance);
    partial void DeleteEquipos(Equipos instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::Final_Linq.Properties.Settings.Default.FutbolConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Liga> Liga
		{
			get
			{
				return this.GetTable<Liga>();
			}
		}
		
		public System.Data.Linq.Table<Equipos> Equipos
		{
			get
			{
				return this.GetTable<Equipos>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Liga")]
	public partial class Liga : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _País;
		
		private string _Nombre;
		
		private EntitySet<Equipos> _Equipos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnPaísChanging(string value);
    partial void OnPaísChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public Liga()
		{
			this._Equipos = new EntitySet<Equipos>(new Action<Equipos>(this.attach_Equipos), new Action<Equipos>(this.detach_Equipos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_País", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string País
		{
			get
			{
				return this._País;
			}
			set
			{
				if ((this._País != value))
				{
					this.OnPaísChanging(value);
					this.SendPropertyChanging();
					this._País = value;
					this.SendPropertyChanged("País");
					this.OnPaísChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Liga_Equipos", Storage="_Equipos", ThisKey="Nombre", OtherKey="Liga")]
		public EntitySet<Equipos> Equipos
		{
			get
			{
				return this._Equipos;
			}
			set
			{
				this._Equipos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Equipos(Equipos entity)
		{
			this.SendPropertyChanging();
			entity.Liga1 = this;
		}
		
		private void detach_Equipos(Equipos entity)
		{
			this.SendPropertyChanging();
			entity.Liga1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Equipos")]
	public partial class Equipos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nombre;
		
		private string _Estadio;
		
		private long _Valor_Equipo;
		
		private string _Liga;
		
		private int _Num_Jugadores;
		
		private string _Escudo;
		
		private EntityRef<Liga> _Liga1;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnEstadioChanging(string value);
    partial void OnEstadioChanged();
    partial void OnValor_EquipoChanging(long value);
    partial void OnValor_EquipoChanged();
    partial void OnLigaChanging(string value);
    partial void OnLigaChanged();
    partial void OnNum_JugadoresChanging(int value);
    partial void OnNum_JugadoresChanged();
    partial void OnEscudoChanging(string value);
    partial void OnEscudoChanged();
    #endregion
		
		public Equipos()
		{
			this._Liga1 = default(EntityRef<Liga>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estadio", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Estadio
		{
			get
			{
				return this._Estadio;
			}
			set
			{
				if ((this._Estadio != value))
				{
					this.OnEstadioChanging(value);
					this.SendPropertyChanging();
					this._Estadio = value;
					this.SendPropertyChanged("Estadio");
					this.OnEstadioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Valor_Equipo", DbType="BigInt NOT NULL")]
		public long Valor_Equipo
		{
			get
			{
				return this._Valor_Equipo;
			}
			set
			{
				if ((this._Valor_Equipo != value))
				{
					this.OnValor_EquipoChanging(value);
					this.SendPropertyChanging();
					this._Valor_Equipo = value;
					this.SendPropertyChanged("Valor_Equipo");
					this.OnValor_EquipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Liga", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Liga
		{
			get
			{
				return this._Liga;
			}
			set
			{
				if ((this._Liga != value))
				{
					if (this._Liga1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLigaChanging(value);
					this.SendPropertyChanging();
					this._Liga = value;
					this.SendPropertyChanged("Liga");
					this.OnLigaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Num_Jugadores", DbType="Int NOT NULL")]
		public int Num_Jugadores
		{
			get
			{
				return this._Num_Jugadores;
			}
			set
			{
				if ((this._Num_Jugadores != value))
				{
					this.OnNum_JugadoresChanging(value);
					this.SendPropertyChanging();
					this._Num_Jugadores = value;
					this.SendPropertyChanged("Num_Jugadores");
					this.OnNum_JugadoresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Escudo", DbType="NVarChar(50)")]
		public string Escudo
		{
			get
			{
				return this._Escudo;
			}
			set
			{
				if ((this._Escudo != value))
				{
					this.OnEscudoChanging(value);
					this.SendPropertyChanging();
					this._Escudo = value;
					this.SendPropertyChanged("Escudo");
					this.OnEscudoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Liga_Equipos", Storage="_Liga1", ThisKey="Liga", OtherKey="Nombre", IsForeignKey=true)]
		public Liga Liga1
		{
			get
			{
				return this._Liga1.Entity;
			}
			set
			{
				Liga previousValue = this._Liga1.Entity;
				if (((previousValue != value) 
							|| (this._Liga1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Liga1.Entity = null;
						previousValue.Equipos.Remove(this);
					}
					this._Liga1.Entity = value;
					if ((value != null))
					{
						value.Equipos.Add(this);
						this._Liga = value.Nombre;
					}
					else
					{
						this._Liga = default(string);
					}
					this.SendPropertyChanged("Liga1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
